#Использовать asserts
#Использовать ".."

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
    ВсеТесты = Новый Массив;    
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаВерсииПриложения");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаАвтораПриложения");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаАдресаАвтораПриложения");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаОписанияПриложения");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаИмениПриложения");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаВерсииМанифеста");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаВерсииСреды");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаТочкиВхода");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьРаботуВыводаЗадачи");

    Возврат ВсеТесты;
КонецФункции

Процедура ПередЗапускомТеста() Экспорт

КонецПроцедуры

 
Процедура ПослеЗапускаТеста() Экспорт

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаВерсииПриложения() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.Версия(),
        "Ожидаем, версия пакета ""1.0"""
    ).Равно("1.0");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаАвтораПриложения() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.Автор(),
        "Ожидаем, автор пакета ""Egor ivanov"""
    ).Равно("Egor ivanov");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаАдресаАвтораПриложения() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.АдресАвтора(),
        "Ожидаем, адрес автора пакета ""Тестовый адрес"""
    ).Равно("Тестовый адрес");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаОписанияПриложения() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.Описание(),
        "Ожидаем,  Описание пакета ""Тестовое описание"""
    ).Равно("Тестовое описание");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаИмениПриложения() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.Имя(),
        "Ожидаем,  имя пакета ""testpackage"""
    ).Равно("testpackage");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаВерсииМанифеста() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.ВерсияМанифеста(),
        "Ожидаем,  версия манифеста пакета ""1.0"""
    ).Равно("1.0");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаВерсииСреды() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.ВерсияСреды(),
        "Ожидаем,  версия среды пакета ""1.8.5"""
    ).Равно("1.8.5");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаТочкиВхода() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.ТочкаВхода(),
        "Ожидаем,  точка входа пакета ""src/main.os"""
    ).Равно("src/main.os");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьРаботуВыводаЗадачи() Экспорт

    ОписаниеПакета = ПолучитьОписаниеПакета();
    
    Ожидаем.Что(
		ОписаниеПакета.Задачи(),
        "Ожидаем,  Задачи пакета ""Тест"""
    ).Равно("Тест");

КонецПроцедуры

Функция ПолучитьОписаниеПакета(ПутьКМанифесту = "")
    Если Не ЗначениеЗаполнено(ПутьКМанифесту) Тогда
        ПутьКМанифесту = ОбъединитьПути(ТекущийСценарий().Каталог, "testdata", "testpackage"); 
    КонецЕсли;
    
	Возврат Новый ИнформацияОПакете(ПутьКМанифесту);
КонецФункции